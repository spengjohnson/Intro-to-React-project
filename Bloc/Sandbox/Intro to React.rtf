{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww17460\viewh5860\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 INTRO TO REACT\
\
> In your own words, explain React\'92s Virtual DOM. What gives React its fast performance? \
\
A: The virtual DOM is a place where you can make changes without making changes to the actual DOM. In the virtual DOM, the render method is utilized, which generates a lightweight version of the view you would see with your changes. It tells what the DOM should look like at any given time. React then figures out the differences between the description and what\'92s already in the memory of the DOM to figure out the fastest way to update the browser (aka diff-ing mechanism). Because React is only updating the new changes vs. 
\i everything, 
\i0 this gives React its fast performance. \
\
>In your own words, describe React\'92s core concept of uni-directional data flow. Draw diagrams to illustrate.\
\
A: Uni-directional data flow results in simpler app development. The model is the single source of truth in this flow. Any changes made in the UI triggers messages that signal user intent to the model. Only the model can change the app\'92s state. Compared to the two-way data binding, the UI fields are bound to the model data, so when the UI field changes, the model data also has to change with it. This is not the case when data only flows in one direction. The data can either flow from top to bottom or from bottom to top. This allows the code to be more predictable and maintainable. }